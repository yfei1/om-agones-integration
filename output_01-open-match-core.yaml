---
# Source: open-match/templates/podsecuritypolicy.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: om-podsecuritypolicy
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    release: open-match
spec:
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  forbiddenSysctls:
  - "*"
  fsGroup:
    rule: "MustRunAs"
    ranges:
    - min: 1
      max: 65535
  hostIPC: false
  hostNetwork: false
  hostPID: false
  hostPorts:
  # Open Match Services
  - min: 50500
    max: 50510
  - min: 51500
    max: 51510
  # Redis
  - min: 6379
    max: 6379
  - min: 9121
    max: 9121
  # Cassandra
  - min: 7000
    max: 7001
  - min: 7199
    max: 7199
  - min: 9042
    max: 9042
  - min: 9160
    max: 9160
  # Grafana
  - min: 3000
    max: 3000
  # Jaeger
  - min: 5775
    max: 5778
  - min: 6831
    max: 6832
  - min: 14267
    max: 14268
  - min: 9411
    max: 9411
  - min: 16686
    max: 16686
  # Prometheus
  - min: 9090
    max: 9093
  - min: 9100
    max: 9100
  - min: 8080
    max: 8080
  privileged: false  # Prevents creation of privileged Pods
  readOnlyRootFilesystem: false
  # Capabilities Reference: https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities
  # TODO: Open Match itself doesn't need any capabilties but its dependencies do. We should split out the service accounts later.
  allowedCapabilities:
  - CHOWN
  #requiredDropCapabilities:
  #- ALL
  runAsUser:
    rule: "RunAsAny"
    # Blocked on isolating the open match services from dependencies (Redis, Prometheus, etc.)
    # Require the container to run without root privileges.
    #rule: 'MustRunAsNonRoot'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: RunAsAny
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    # Assume that persistentVolumes set up by the cluster admin are safe to use.
    - 'persistentVolumeClaim'

---
# Source: open-match/charts/redis/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: om-redis
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
type: Opaque
data:
  redis-password: "UGt1Um1URFcxZA=="
---
# Source: open-match/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: redis
    chart: redis-8.0.9
    heritage: Tiller
    release: open-match
  name: om-redis
data:
  redis.conf: |-
    # User-supplied configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
  master.conf: |-
    dir /data
  replica.conf: |-
    dir /data
    slave-read-only yes
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""

---
# Source: open-match/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: redis
    chart: redis-8.0.9
    heritage: Tiller
    release: open-match
  name: om-redis-health
data:
  ping_local.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_PASSWORD \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_master.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_MASTER_PASSWORD \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_local.sh" $1 || exit_status=$?
    "$script_dir/ping_master.sh" $1 || exit_status=$?
    exit $exit_status

---
# Source: open-match/templates/global-configmap.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: global-configmap
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: config
    release: open-match
data:
  global_config.yaml: |-
    telemetry:
      zpages:
        enable: "true"
      jaeger:
        enable: "false"
        agentEndpoint: "open-match-jaeger-agent:6831"
        collectorEndpoint: "http://open-match-jaeger-collector:14268/api/traces"
      prometheus:
        enable: "false"
        endpoint: "/metrics"
        serviceDiscovery: "true"
      stackdriver:
        enable: "true"
        gcpProjectId: "replace_with_your_project_id"
        metricPrefix: "open_match"
      zipkin:
        enable: "false"
        endpoint: "/zipkin"
        reporterEndpoint: "zipkin"
      reportingPeriod: "1m"

---
# Source: open-match/templates/om-configmap.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: om-configmap
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: config
    release: open-match
data:
  matchmaker_config.yaml: |-
    logging:
      level: debug
      format: stackdriver
      rpc: false
    # Open Match applies the exponential backoff strategy for its retryable gRPC calls.
    # The settings below are the default backoff configuration used in Open Match.
    # See https://github.com/cenkalti/backoff/blob/v3/exponential.go for detailed explanations
    backoff:
      # The initial retry interval (in milliseconds)
      initialInterval: 100ms
      # maxInterval caps the maximum time elapsed for a retry interval
      maxInterval: 500ms
      # The next retry interval is multiplied by this multiplier
      multiplier: 1.5
      # Randomize the retry interval
      randFactor: 0.5
      # maxElapsedTime caps the retry time (in milliseconds)
      maxElapsedTime: 3000ms

    api:
      backend:
        hostname: "om-backend"
        grpcport: "50505"
        httpport: "51505"
      frontend:
        hostname: "om-frontend"
        grpcport: "50504"
        httpport: "51504"
      mmlogic:
        hostname: "om-mmlogic"
        grpcport: "50503"
        httpport: "51503"
      synchronizer:
        hostname: "om-synchronizer"
        grpcport: "50506"
        httpport: "51506"
      swaggerui:
        hostname: "om-swaggerui"
        httpport: "51500"
      evaluator:
        hostname: "om-evaluator"
        grpcport: "50508"
        httpport: "51508"

    synchronizer:
      enabled: false
      registrationIntervalMs: 3000ms
      proposalCollectionIntervalMs: 2000ms
    
    storage:
      page:
        size: 10000
    
    redis:
      pool:
        maxIdle: 3
        maxActive: 0
        idleTimeout: 60s
        healthCheckTimeout: 100ms
      ignoreLists:
        ttl: 1000ms
      expiration: 43200
    
    ticketIndices:
      - char.cleric
      - char.knight
      - char.paladin
      - map.aleroth
      - map.oasis
      - mmr.rating
      - mode.battleroyale
      - mode.ctf
      - mode.demo
      - region.europe-east1
      - region.europe-west1
      - region.europe-west2
      - region.europe-west3
      - region.europe-west4
      - role.dps
      - role.support
      - role.tank

---
# Source: open-match/templates/service-account.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: open-match-unprivileged-service
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    release: open-match
automountServiceAccountToken: false
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: om-service-role
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    release: open-match
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - om-podsecuritypolicy
  verbs:
  - use
---
# This applies psp/restricted to all authenticated users
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: om-service-role-binding
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    release: open-match
subjects:
- kind: Group
  name: system:authenticated # All authenticated users
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: om-service-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: open-match/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: om-redis-headless
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: "open-match"

---
# Source: open-match/charts/redis/templates/metrics-svc.yaml

apiVersion: v1
kind: Service
metadata:
  name: om-redis-metrics
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
  annotations:
    prometheus.io/port: "9121"
    prometheus.io/scrape: "true"
    
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9121
    targetPort: metrics
  selector:
    app: redis
    release: open-match
    role: metrics

---
# Source: open-match/charts/redis/templates/redis-master-svc.yaml

apiVersion: v1
kind: Service
metadata:
  name: om-redis-master
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: "open-match"
    role: master

---
# Source: open-match/charts/redis/templates/redis-slave-svc.yaml

apiVersion: v1
kind: Service
metadata:
  name: om-redis-slave
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: "open-match"
    role: slave

---
# Source: open-match/templates/backend.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: Service
apiVersion: v1
metadata:
  name: om-backend
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: backend
    release: open-match
spec:
  selector:
    app: open-match
    component: backend
    release: open-match
  type: LoadBalancer
  ports:
  - name: grpc
    protocol: TCP
    port: 50505
  - name: http
    protocol: TCP
    port: 51505
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: om-backend
  namespace: open-match
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: om-backend
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-backend
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: backend
    release: open-match
spec:
  replicas: 3
  selector:
    matchLabels:
      app: open-match
      component: backend
  template:
    metadata:
      namespace: open-match
      annotations:
        chart: open-match-0.0.0-dev
        heritage: Tiller
        
      labels:
        app: open-match
        component: backend
        release: open-match
    spec:
      volumes:
        
        - name: global-config-volume
          configMap:
            name: global-configmap
        - name: om-config-volume
          configMap:
            name: om-configmap
        
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-backend
        volumeMounts:
          
          - name: global-config-volume
            mountPath: /app/config/global
          - name: om-config-volume
            mountPath: /app/config/om
          
        image: "gcr.io/open-match-build/openmatch-backend:0.0.0-dev-8e3c33c"
        ports:
        - name: grpc
          containerPort: 50505
        - name: http
          containerPort: 51505
        imagePullPolicy: Always
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        env:
        - name: REDIS_SERVICE_HOST
          value: "$(OM_REDIS_MASTER_SERVICE_HOST)"
        - name: REDIS_SERVICE_PORT
          value: "$(OM_REDIS_MASTER_SERVICE_PORT)"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 51505
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz?readiness=true
            port: 51505
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2

---
# Source: open-match/templates/frontend.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: Service
apiVersion: v1
metadata:
  name: om-frontend
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: frontend
    release: open-match
spec:
  selector:
    app: open-match
    component: frontend
    release: open-match
  type: LoadBalancer
  ports:
  - name: grpc
    protocol: TCP
    port: 50504
  - name: http
    protocol: TCP
    port: 51504
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: om-frontend
  namespace: open-match
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: om-frontend
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-frontend
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: frontend
    release: open-match
spec:
  replicas: 3
  selector:
    matchLabels:
      app: open-match
      component: frontend
  template:
    metadata:
      namespace: open-match
      annotations:
        chart: open-match-0.0.0-dev
        heritage: Tiller
        
      labels:
        app: open-match
        component: frontend
        release: open-match
    spec:
      volumes:
        
        - name: global-config-volume
          configMap:
            name: global-configmap
        - name: om-config-volume
          configMap:
            name: om-configmap
        
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-frontend
        volumeMounts:
          
          - name: global-config-volume
            mountPath: /app/config/global
          - name: om-config-volume
            mountPath: /app/config/om
          
        image: "gcr.io/open-match-build/openmatch-frontend:0.0.0-dev-8e3c33c"
        ports:
        - name: grpc
          containerPort: 50504
        - name: http
          containerPort: 51504
        imagePullPolicy: Always
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        env:
        - name: REDIS_SERVICE_HOST
          value: "$(OM_REDIS_MASTER_SERVICE_HOST)"
        - name: REDIS_SERVICE_PORT
          value: "$(OM_REDIS_MASTER_SERVICE_PORT)"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 51504
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz?readiness=true
            port: 51504
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2

---
# Source: open-match/templates/mmlogic.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: Service
apiVersion: v1
metadata:
  name: om-mmlogic
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: mmlogic
    release: open-match
spec:
  selector:
    app: open-match
    component: mmlogic
    release: open-match
  type: LoadBalancer
  ports:
  - name: grpc
    protocol: TCP
    port: 50503
  - name: http
    protocol: TCP
    port: 51503
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: om-mmlogic
  namespace: open-match
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: om-mmlogic
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-mmlogic
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: mmlogic
    release: open-match
spec:
  replicas: 3
  selector:
    matchLabels:
      app: open-match
      component: mmlogic
  template:
    metadata:
      namespace: open-match
      annotations:
        chart: open-match-0.0.0-dev
        heritage: Tiller
        
      labels:
        app: open-match
        component: mmlogic
        release: open-match
    spec:
      volumes:
        
        - name: global-config-volume
          configMap:
            name: global-configmap
        - name: om-config-volume
          configMap:
            name: om-configmap
        
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-mmlogic
        volumeMounts:
          
          - name: global-config-volume
            mountPath: /app/config/global
          - name: om-config-volume
            mountPath: /app/config/om
          
        image: "gcr.io/open-match-build/openmatch-mmlogic:0.0.0-dev-8e3c33c"
        ports:
        - name: grpc
          containerPort: 50503
        - name: http
          containerPort: 51503
        imagePullPolicy: Always
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        env:
        - name: REDIS_SERVICE_HOST
          value: "$(OM_REDIS_MASTER_SERVICE_HOST)"
        - name: REDIS_SERVICE_PORT
          value: "$(OM_REDIS_MASTER_SERVICE_PORT)"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 51503
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz?readiness=true
            port: 51503
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2

---
# Source: open-match/templates/swaggerui.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: Service
apiVersion: v1
metadata:
  name: om-swaggerui
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: swaggerui
    release: open-match
spec:
  selector:
    app: open-match
    component: swaggerui
  type: LoadBalancer
  ports:
  - name: http
    protocol: TCP
    port: 51500
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-swaggerui
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: swaggerui
    release: open-match
spec:
  replicas: 3
  selector:
    matchLabels:
      app: open-match
      component: swaggerui
  template:
    metadata:
      namespace: open-match
      annotations:
        chart: open-match-0.0.0-dev
        heritage: Tiller
      labels:
        app: open-match
        component: swaggerui
        release: open-match
    spec:
      volumes:
        
        - name: global-config-volume
          configMap:
            name: global-configmap
        - name: om-config-volume
          configMap:
            name: om-configmap
        
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-swaggerui
        volumeMounts:
          
          - name: global-config-volume
            mountPath: /app/config/global
          - name: om-config-volume
            mountPath: /app/config/om
          
        image: "gcr.io/open-match-build/openmatch-swaggerui:0.0.0-dev-8e3c33c"
        ports:
        - name: http
          containerPort: 51500
        imagePullPolicy: Always
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 51500
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz?readiness=true
            port: 51500
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2

---
# Source: open-match/templates/synchronizer.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: Service
apiVersion: v1
metadata:
  name: om-synchronizer
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: synchronizer
    release: open-match
spec:
  selector:
    app: open-match
    component: synchronizer
    release: open-match
  type: ClusterIP
  ports:
  - name: grpc
    protocol: TCP
    port: 50506
  - name: http
    protocol: TCP
    port: 51506
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-synchronizer
  namespace: open-match
  annotations:
    chart: open-match-0.0.0-dev
    heritage: Tiller
  labels:
    app: open-match
    component: synchronizer
    release: open-match
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-match
      component: synchronizer
  template:
    metadata:
      namespace: open-match
      annotations:
        chart: open-match-0.0.0-dev
        heritage: Tiller
        
      labels:
        app: open-match
        component: synchronizer
        release: open-match
    spec:
      volumes:
        
        - name: global-config-volume
          configMap:
            name: global-configmap
        - name: om-config-volume
          configMap:
            name: om-configmap
        
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-mmlogic
        volumeMounts:
          
          - name: global-config-volume
            mountPath: /app/config/global
          - name: om-config-volume
            mountPath: /app/config/om
          
        image: "gcr.io/open-match-build/openmatch-synchronizer:0.0.0-dev-8e3c33c"
        ports:
        - name: grpc
          containerPort: 50506
        - name: http
          containerPort: 51506
        imagePullPolicy: Always
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        env:
        - name: REDIS_SERVICE_HOST
          value: "$(OM_REDIS_MASTER_SERVICE_HOST)"
        - name: REDIS_SERVICE_PORT
          value: "$(OM_REDIS_MASTER_SERVICE_PORT)"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 51506
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz?readiness=true
            port: 51506
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2

---
# Source: open-match/charts/redis/templates/metrics-deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: om-redis-metrics
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
spec:
  selector:
    matchLabels:
        release: "open-match"
        role: metrics
        app: redis
  template:
    metadata:
      labels:
        release: "open-match"
        chart: redis-8.0.9
        role: metrics
        app: redis
      annotations:
        checksum/secret: b5ccbb0c4e064a6506a600576d503fe40f2687195ad17c61d71c53ef5dfaaf11
    spec:      
      serviceAccountName: "default"
      containers:
      - name: metrics
        image: docker.io/oliver006/redis_exporter:v0.31.0
        imagePullPolicy: "IfNotPresent"
        args:
        env:
        - name: REDIS_ADDR
          value: "om-redis-master:6379,om-redis-slave:6379"
        - name: REDIS_ALIAS
          value: om-redis
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        volumeMounts:
        ports:
        - name: metrics
          containerPort: 9121
        resources:
          null
          
      volumes:

---
# Source: open-match/charts/redis/templates/redis-master-statefulset.yaml
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: om-redis-master
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
spec:
  selector:
    matchLabels:
      release: "open-match"
      role: master
      app: redis
  serviceName: om-redis-headless
  template:
    metadata:
      labels:
        release: "open-match"
        chart: redis-8.0.9
        role: master
        app: redis
      annotations:
        checksum/health: 3064f31b613fda0314a8521c7950ce3d558bb0887fad35a1bfc788ff5cc54775
        checksum/configmap: ca85aa5f6a887d853d873a34690336448f69475a9d3c7c632f5f545fb9bbc5df
        checksum/secret: f0e11e3691247bc6bf50f0c56421b044600d72280df674cadf414c785ec3a19a
    spec:      
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
      - name: om-redis
        image: "docker.io/bitnami/redis:5.0.5-debian-9-r36"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
        command:
        - /bin/bash
        - -c
        - |
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_PASSWORD_FILE}`
            export REDIS_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi          
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--requirepass" "${REDIS_PASSWORD}")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
          /run.sh ${ARGS[@]}
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        - name: REDIS_PORT
          value: "6379"
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_local.sh 5
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_local.sh 5
        resources:
          null
          
        volumeMounts:
        - name: health
          mountPath: /health
        - name: redis-data
          mountPath: /data
          subPath: 
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc/
      volumes:
      - name: health
        configMap:
          name: om-redis-health
          defaultMode: 0755
      - name: config
        configMap:
          name: om-redis
      - name: redis-tmp-conf
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: "redis"
          component: "master"
          release: "open-match"
          heritage: "Tiller"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
  updateStrategy:
    type: RollingUpdate

---
# Source: open-match/charts/redis/templates/redis-slave-statefulset.yaml

apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: om-redis-slave
  labels:
    app: redis
    chart: redis-8.0.9
    release: "open-match"
    heritage: "Tiller"
spec:
  replicas: 2
  serviceName: om-redis-headless
  selector:
    matchLabels:
        release: "open-match"
        role: slave
        app: redis
  template:
    metadata:
      labels:
        release: "open-match"
        chart: redis-8.0.9
        role: slave
        app: redis
      annotations:
        checksum/health: 3064f31b613fda0314a8521c7950ce3d558bb0887fad35a1bfc788ff5cc54775
        checksum/configmap: ca85aa5f6a887d853d873a34690336448f69475a9d3c7c632f5f545fb9bbc5df
        checksum/secret: 533f1a2f82a450e1807e1c8a4f0bc9cd9bfae88786cb2980afe562331f509841
    spec:      
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
      - name: om-redis
        image: docker.io/bitnami/redis:5.0.5-debian-9-r36
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
        command:
        - /bin/bash
        - -c
        - |
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_PASSWORD_FILE}`
            export REDIS_PASSWORD=$password_aux
          fi
          if [[ -n $REDIS_MASTER_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_MASTER_PASSWORD_FILE}`
            export REDIS_MASTER_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/replica.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/replica.conf /opt/bitnami/redis/etc/replica.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi          
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--slaveof" "${REDIS_MASTER_HOST}" "${REDIS_MASTER_PORT_NUMBER}")
          ARGS+=("--requirepass" "${REDIS_PASSWORD}")
          ARGS+=("--masterauth" "${REDIS_MASTER_PASSWORD}")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/replica.conf")
          /run.sh "${ARGS[@]}"
        env:
        - name: REDIS_REPLICATION_MODE
          value: slave
        - name: REDIS_MASTER_HOST
          value: om-redis-master-0.om-redis-headless.open-match.svc.cluster.local
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_MASTER_PORT_NUMBER
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        - name: REDIS_MASTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: om-redis
              key: redis-password
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_local_and_master.sh 5
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_local_and_master.sh 5
        resources:
          null
          
        volumeMounts:
        - name: health
          mountPath: /health
        - name: redis-data
          mountPath: /data
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc
      volumes:
      - name: health
        configMap:
          name: om-redis-health
          defaultMode: 0755
      - name: config
        configMap:
          name: om-redis
      - name: sentinel-tmp-conf
        emptyDir: {}
      - name: redis-tmp-conf
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: "redis"
          component: "slave"
          release: "open-match"
          heritage: "Tiller"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
  updateStrategy:
    type: RollingUpdate

---
# Source: open-match/charts/redis/templates/metrics-prometheus.yaml

---
# Source: open-match/charts/redis/templates/networkpolicy.yaml


---
# Source: open-match/charts/redis/templates/redis-role.yaml

---
# Source: open-match/charts/redis/templates/redis-rolebinding.yaml

---
# Source: open-match/charts/redis/templates/redis-serviceaccount.yaml

---
# Source: open-match/charts/redis/templates/redis-with-sentinel-svc.yaml


---
# Source: open-match/templates/tls-secret.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

